version: "3.3"

services:

  base:
    image: marrtino:base
    build:
      context: $MARRTINO_APPS_HOME/docker
      dockerfile: Dockerfile.base
    container_name: base
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    environment:
    - DISPLAY=:0
    - ROS_IP=$ROS_IP
    - ROBOT_TYPE=$ROBOT_TYPE
    volumes:
    - $MARRTINO_APPS_HOME:/home/robot/src/marrtino_apps
    - $HOME/log:/home/robot/log
    - $HOME/system_config.yaml:/home/robot/system_config.yaml

  web:
        image: nginx:alpine
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/ssl:/etc/ssl"
            - "./web:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "8080:80"
            - "443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
  php:
        image: nanoninja/php-fpm:${PHP_VERSION}
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./web:/var/www/html"
  composer:
        image: "composer"
        volumes:
            - "./web/app:/app"
        command: install
        
  myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - "8081:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${MYSQL_HOST}
        restart: always
        depends_on:
            - mysqldb
  mysqldb:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "8989:3306"
        volumes:
            - "$HOME/src/data/db/mysql:/var/lib/mysql"

  nginx:
    image: nginx
    container_name: nginx
    network_mode: "host"
    volumes:
    - $HOME/src/marrtino_apps/www:/usr/share/nginx/html


  stage:
    image: iocchi/stage_environments
    container_name: stage
    network_mode: "host"
    tty: true
    environment:
    - DISPLAY=$DISPLAY
    - ROS_IP=$ROS_IP
    volumes:
    - /tmp/.X11-unix:/tmp/.X11-unix
    - $HOME/.Xauthority:/home/robot/.Xauthority
    - $HOME/src/stage_environments:/home/robot/src/stage_environments
    entrypoint:
    - bash
    - -ci
    - "rosrun stage_environments start_simulation.py --server -server_port 9235"

  orazio:
    image: iocchi/orazio
    container_name: orazio
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    privileged: true
    environment:
    - ROS_IP=$ROS_IP
    volumes:
    - /dev:/dev
    - $MARRTINO_APPS_HOME:/home/robot/src/marrtino_apps

  teleop:
    image: marrtino:teleop
    build:
      context: $MARRTINO_APPS_HOME/docker
      dockerfile: Dockerfile.teleop
    container_name: teleop
    privileged: true
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    environment:
    - ROS_IP=$ROS_IP
    - ROBOT_TYPE=$ROBOT_TYPE
    volumes:
    - /dev:/dev
    - $MARRTINO_APPS_HOME:/home/robot/src/marrtino_apps

  navigation:
    image: marrtino:navigation
    build:
      context: $MARRTINO_APPS_HOME/docker
      dockerfile: Dockerfile.navigation
    container_name: navigation
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    privileged: true
    environment:
    - DISPLAY=:0
    - ROS_IP=$ROS_IP
    - ROBOT_TYPE=$ROBOT_TYPE
    volumes:
    - /dev:/dev
    - $MARRTINO_APPS_HOME:/home/robot/src/marrtino_apps

  vision:
    image: marrtino:vision
    build:
      context: $MARRTINO_APPS_HOME/docker
      dockerfile: Dockerfile.vision
    container_name: vision
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    privileged: true
    environment:
    - DISPLAY=:0
    - ROS_IP=$ROS_IP
    - CAMRES=$CAMRES
    volumes:
    - /dev:/dev
    - $MARRTINO_APPS_HOME:/home/robot/src/marrtino_apps

  speech:
    image: marrtino:speech
    build:
      context: $MARRTINO_APPS_HOME/docker
      dockerfile: Dockerfile.speech
    container_name: speech
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    privileged: true
    environment:
    - ROS_IP=$ROS_IP
    volumes:
    - /dev:/dev
    - $MARRTINO_APPS_HOME:/home/robot/src/marrtino_apps

  social:
    image: marrtino:social
    build:
      context: $MARRTINO_SOCIAL/docker
      dockerfile: Dockerfile.social
    container_name: social
    dns: 8.8.8.8
    network_mode: "host"
    tty: true
    privileged: true
    environment:
    - ROS_IP=$ROS_IP
    volumes:
    - /dev:/dev
    - $MARRTINO_APPS_HOME:/home/robot/src/marrtino_apps
    - $MARRTINO_SOCIAL:/home/robot/src/social

